!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module T96 ! in 
    interface  ! in :T96
        subroutine t96_01(iopt,parmod,ps,x,y,z,bx,by,bz) ! in :T96:T96.f
            integer intent(in) :: iopt
            real dimension(10),intent(in) :: parmod
            real intent(in) :: ps
            real intent(in) :: x
            real intent(in) :: y
            real intent(in) :: z
            real intent(out) :: bx
            real intent(out) :: by
            real intent(out) :: bz
        end subroutine t96_01
        subroutine dipshld(ps,x,y,z,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: ps
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
        end subroutine dipshld
        subroutine cylharm(a,x,y,z,bx,by,bz) ! in :T96:T96.f
            real dimension(12),intent(in) :: a
            real intent(in) :: x
            real intent(in) :: y
            real intent(in) :: z
            real intent(out) :: bx
            real intent(out) :: by
            real intent(out) :: bz
        end subroutine cylharm
        subroutine cylhar1(a,x,y,z,bx,by,bz) ! in :T96:T96.f
            real dimension(12),intent(in) :: a
            real intent(in) :: x
            real intent(in) :: y
            real intent(in) :: z
            real intent(out) :: bx
            real intent(out) :: by
            real intent(out) :: bz
        end subroutine cylhar1
        function bes(x,k) ! in :T96:T96.f
            real*8 intent(in) :: x
            integer intent(in) :: k
            double precision intent(out) :: bes
        end function bes
        function bes0(x) ! in :T96:T96.f
            real*8 intent(in) :: x
            double precision intent(out) :: bes0
        end function bes0
        function bes1(x) ! in :T96:T96.f
            real*8 intent(in) :: x
            double precision intent(out) :: bes1
        end function bes1
        subroutine intercon(x,y,z,bx,by,bz) ! in :T96:T96.f
            real intent(in) :: x
            real intent(in) :: y
            real intent(in) :: z
            real intent(out) :: bx
            real intent(out) :: by
            real intent(out) :: bz
        end subroutine intercon
        subroutine tailrc96(sps,x,y,z,bxrc,byrc,bzrc,bxt2,byt2,bzt2,bxt3,byt3,bzt3) ! in :T96:T96.f
            real*8 intent(in) :: sps
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bxrc
            real*8 intent(out) :: byrc
            real*8 intent(out) :: bzrc
            real*8 intent(out) :: bxt2
            real*8 intent(out) :: byt2
            real*8 intent(out) :: bzt2
            real*8 intent(out) :: bxt3
            real*8 intent(out) :: byt3
            real*8 intent(out) :: bzt3
            real*8 :: cpss
            real*8 :: spss
            real*8 :: dpsrr
            real*8 :: rps
            real*8 :: warp
            real*8 :: d
            real*8 :: xs
            real*8 :: zs
            real*8 :: dxsx
            real*8 :: dxsy
            real*8 :: dxsz
            real*8 :: dzsx
            real*8 :: dzsy
            real*8 :: dzsz
            real*8 :: dzetas
            real*8 :: ddzetadx
            real*8 :: ddzetady
            real*8 :: ddzetadz
            real*8 :: zsww
            common /warp/ cpss,spss,dpsrr,rps,warp,d,xs,zs,dxsx,dxsy,dxsz,dzsx,dzsy,dzsz,dzetas,ddzetadx,ddzetady,ddzetadz,zsww
        end subroutine tailrc96
        subroutine ringcurr96(x,y,z,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
            real*8 :: cpss
            real*8 :: spss
            real*8 :: dpsrr
            real*8 dimension(3) :: xnext
            real*8 :: xs
            real*8 :: zswarped
            real*8 :: dxsx
            real*8 :: dxsy
            real*8 :: dxsz
            real*8 :: dzsx
            real*8 :: dzsywarped
            real*8 :: dzsz
            real*8 dimension(4) :: other
            common /warp/ cpss,spss,dpsrr,xnext,xs,zswarped,dxsx,dxsy,dxsz,dzsx,dzsywarped,dzsz,other,zs  !  zs here is without y-
        end subroutine ringcurr96
        subroutine taildisk(x,y,z,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
            real*8 :: cpss
            real*8 :: spss
            real*8 :: dpsrr
            real*8 dimension(3) :: xnext
            real*8 :: xs
            real*8 :: zs
            real*8 :: dxsx
            real*8 :: dxsy
            real*8 :: dxsz
            real*8 dimension(3) :: other
            real*8 :: dzetas
            real*8 :: ddzetadx
            real*8 :: ddzetady
            real*8 :: ddzetadz
            real*8 :: zsww
            common /warp/ cpss,spss,dpsrr,xnext,xs,zs,dxsx,dxsy,dxsz,other,dzetas,ddzetadx,ddzetady,ddzetadz,zsww
        end subroutine taildisk
        subroutine tail87(x,z,bx,bz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: bz
            real*8 dimension(3) :: first
            real*8 :: rps
            real*8 :: warp
            real*8 :: d
            real*8 dimension(13) :: other
            common /warp/ first,rps,warp,d,other
        end subroutine tail87
        subroutine shlcar3x3(a,x,y,z,sps,hx,hy,hz) ! in :T96:T96.f
            real dimension(48),intent(out) :: a
            real intent(in) :: x
            real intent(in) :: y
            real intent(in) :: z
            real intent(in) :: sps
            real intent(out) :: hx
            real intent(out) :: hy
            real intent(out) :: hz
        end subroutine shlcar3x3
        subroutine birk1tot_02(ps,x,y,z,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: ps
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
            real*8, optional :: dx=-0.16d0
            real*8, optional :: scalein=0.08d0
            real*8, optional :: scaleout=0.4d0
            real*8, optional :: rh=9.d0
            real*8, optional :: dr=4.d0
            real*8, optional :: tilt=1.00891
            real*8, optional,dimension(2) :: xcentre=2.28397
            real*8, optional,dimension(2) :: radius=-5.60831
            real*8, optional :: dipx=1.86106
            real*8, optional :: dipy=7.83281
            real*8, optional,dimension(12) :: xx1=-11.d0
            real*8, optional,dimension(12) :: yy1=2.d0
            real*8, optional,dimension(14) :: xx2=-10.d0
            real*8, optional,dimension(14) :: yy2=3.d0
            real*8, optional,dimension(14) :: zz2=2*20.d0
            common /dx1/ dx,scalein,scaleout
            common /rhdr/ rh,dr
            common /loopdip1/ tilt,xcentre,radius,dipx,dipy
            common /coord11/ xx1,yy1
            common /coord21/ xx2,yy2,zz2
        end subroutine birk1tot_02
        subroutine diploop1(xi,d) ! in :T96:T96.f
            real dimension(4),intent(in) :: xi
            real dimension(3,26),intent(out) :: d
            real :: rh
            real :: dr
            real :: tilt
            real dimension(2) :: xcentre
            real dimension(2) :: radius
            real :: dipx
            real :: dipy
            real dimension(12) :: xx
            real dimension(12) :: yy
            common /rhdr/ rh,dr
            common /loopdip1/ tilt,xcentre,radius,dipx,dipy
            common /coord11/ xx,yy
        end subroutine diploop1
        subroutine circle(x,y,z,rl,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(in) :: rl
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
        end subroutine circle
        subroutine crosslp(x,y,z,bx,by,bz,xc,rl,al) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
            real*8 intent(in) :: xc
            real*8 intent(in) :: rl
            real*8 intent(in) :: al
        end subroutine crosslp
        subroutine dipxyz(x,y,z,bxx,byx,bzx,bxy,byy,bzy,bxz,byz,bzz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bxx
            real*8 intent(out) :: byx
            real*8 intent(out) :: bzx
            real*8 intent(out) :: bxy
            real*8 intent(out) :: byy
            real*8 intent(out) :: bzy
            real*8 intent(out) :: bxz
            real*8 intent(out) :: byz
            real*8 intent(out) :: bzz
        end subroutine dipxyz
        subroutine condip1(xi,d) ! in :T96:T96.f
            real dimension(4),intent(in) :: xi
            real dimension(3,79),intent(out) :: d
            real :: dx
            real :: scalein
            real :: scaleout
            real dimension(14) :: xx
            real dimension(14) :: yy
            real dimension(14) :: zz
            common /dx1/ dx,scalein,scaleout
            common /coord21/ xx,yy,zz
        end subroutine condip1
        subroutine birk1shld(ps,x,y,z,bx,by,bz) ! in :T96:T96.f
            real intent(in) :: ps
            real intent(in) :: x
            real intent(in) :: y
            real intent(in) :: z
            real intent(out) :: bx
            real intent(out) :: by
            real intent(out) :: bz
        end subroutine birk1shld
        subroutine birk2tot_02(ps,x,y,z,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: ps
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
        end subroutine birk2tot_02
        subroutine birk2shl(x,y,z,ps,hx,hy,hz) ! in :T96:T96.f
            real intent(in) :: x
            real intent(in) :: y
            real intent(in) :: z
            real intent(in) :: ps
            real intent(out) :: hx
            real intent(out) :: hy
            real intent(out) :: hz
        end subroutine birk2shl
        subroutine r2_birk(x,y,z,ps,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(in) :: ps
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
        end subroutine r2_birk
        subroutine r2inner(x,y,z,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
        end subroutine r2inner
        subroutine bconic(x,y,z,cbx,cby,cbz,nmax) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 dimension(nmax),intent(out) :: cbx
            real*8 dimension(nmax),depend(nmax),intent(out) :: cby
            real*8 dimension(nmax),depend(nmax),intent(out) :: cbz
            integer, optional,check(len(cbx)>=nmax),depend(cbx),intent(in) :: nmax=len(cbx)
        end subroutine bconic
        subroutine dipdistr(x,y,z,bx,by,bz,mode) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
            integer intent(in) :: mode
        end subroutine dipdistr
        subroutine r2outer(x,y,z,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
        end subroutine r2outer
        subroutine loops4(x,y,z,bx,by,bz,xc,yc,zc,r,theta,phi) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
            real*8 intent(in) :: xc
            real*8 intent(in) :: yc
            real*8 intent(in) :: zc
            real*8 intent(in) :: r
            real*8 intent(in) :: theta
            real*8 intent(in) :: phi
        end subroutine loops4
        subroutine r2sheet(x,y,z,bx,by,bz) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            real*8 intent(out) :: bx
            real*8 intent(out) :: by
            real*8 intent(out) :: bz
        end subroutine r2sheet
        function xksi(x,y,z) ! in :T96:T96.f
            real*8 intent(in) :: x
            real*8 intent(in) :: y
            real*8 intent(in) :: z
            double precision intent(out) :: xksi
        end function xksi
        function fexp(s,a) ! in :T96:T96.f
            real*8 intent(in) :: s
            real*8 intent(in) :: a
            real*8 intent(out) :: fexp
        end function fexp
        function fexp1(s,a) ! in :T96:T96.f
            real*8 intent(in) :: s
            real*8 intent(in) :: a
            real*8 intent(out) :: fexp1
        end function fexp1
        function tksi(xksi,xks0,dxksi) ! in :T96:T96.f
            real*8 intent(in) :: xksi
            real*8 intent(in) :: xks0
            real*8 intent(in) :: dxksi
            double precision intent(out) :: tksi
        end function tksi
        subroutine dipole(ps,x,y,z,bx,by,bz) ! in :T96:T96.f
            real intent(in) :: ps
            real intent(in) :: x
            real intent(in) :: y
            real intent(in) :: z
            real intent(out) :: bx
            real intent(out) :: by
            real intent(out) :: bz
        end subroutine dipole
    end interface 
end python module T96

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
